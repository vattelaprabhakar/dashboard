//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FortuneTechPvtLtd.DataModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class FortuneSoftEntities : DbContext
    {
        public FortuneSoftEntities()
            : base("name=FortuneSoftEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<tbl_campaign> tbl_campaign { get; set; }
        public DbSet<tbl_EmailLog> tbl_EmailLog { get; set; }
        public DbSet<tbl_EnquiryForm> tbl_EnquiryForm { get; set; }
        public DbSet<tbl_FortuneBasicInfo> tbl_FortuneBasicInfo { get; set; }
        public DbSet<tbl_FortuneRoles> tbl_FortuneRoles { get; set; }
        public DbSet<tbl_FortuneUsers> tbl_FortuneUsers { get; set; }
        public DbSet<tbl_LeadEmailContent> tbl_LeadEmailContent { get; set; }
        public DbSet<tbl_LeadStatus> tbl_LeadStatus { get; set; }
        public DbSet<tbl_LeadStatusEmailContent> tbl_LeadStatusEmailContent { get; set; }
        public DbSet<tbl_Logs> tbl_Logs { get; set; }
        public DbSet<tbl_Menu> tbl_Menu { get; set; }
        public DbSet<tbl_Payment> tbl_Payment { get; set; }
        public DbSet<tbl_Productlist> tbl_Productlist { get; set; }
        public DbSet<tbl_SmsContent> tbl_SmsContent { get; set; }
        public DbSet<tbl_SmsLog> tbl_SmsLog { get; set; }
        public DbSet<tbl_Source> tbl_Source { get; set; }
        public DbSet<tbl_UserLog> tbl_UserLog { get; set; }
        public DbSet<tbl_enquirydetails> tbl_enquirydetails { get; set; }
        public DbSet<tbl_Emailtemp> tbl_Emailtemp { get; set; }
        public DbSet<tbl_alerts> tbl_alerts { get; set; }
        public DbSet<tbl_alerts_master> tbl_alerts_master { get; set; }
        public DbSet<tbl_Smstemp> tbl_Smstemp { get; set; }
        public DbSet<tbl_customlabel> tbl_customlabel { get; set; }
        public DbSet<tbl_EmailtempforAlerts> tbl_EmailtempforAlerts { get; set; }
        public DbSet<tbl_Enquirytracking> tbl_Enquirytracking { get; set; }
        public DbSet<tbl_ErrorLog> tbl_ErrorLog { get; set; }
        public DbSet<tbl_SmsLogForAlerts> tbl_SmsLogForAlerts { get; set; }
        public DbSet<tbl_Userreports> tbl_Userreports { get; set; }
    
        //public virtual int Proc_AddLead(Nullable<int> compId, Nullable<int> brId, string leadName, string address, string mobile, string email, string product, string reference, string wantSMSAlerts, string leadAssignedby, string status, string website, string industry, string rating, string comment1, string comment2, string comment3, string leadOwner, Nullable<System.DateTime> leadDate, Nullable<System.DateTime> followUpdate, Nullable<int> selectedProductId, Nullable<int> selectedStatusId, Nullable<int> selectedReference, string wantMailAlerts, string record_CreatedBy, Nullable<System.DateTime> created_Date, string record_ModifiedBy, Nullable<System.DateTime> modified_Date)
        //{
        //    var compIdParameter = compId.HasValue ?
        //        new ObjectParameter("CompId", compId) :
        //        new ObjectParameter("CompId", typeof(int));
    
        //    var brIdParameter = brId.HasValue ?
        //        new ObjectParameter("BrId", brId) :
        //        new ObjectParameter("BrId", typeof(int));
    
        //    var leadNameParameter = leadName != null ?
        //        new ObjectParameter("LeadName", leadName) :
        //        new ObjectParameter("LeadName", typeof(string));
    
        //    var addressParameter = address != null ?
        //        new ObjectParameter("Address", address) :
        //        new ObjectParameter("Address", typeof(string));
    
        //    var mobileParameter = mobile != null ?
        //        new ObjectParameter("Mobile", mobile) :
        //        new ObjectParameter("Mobile", typeof(string));
    
        //    var emailParameter = email != null ?
        //        new ObjectParameter("Email", email) :
        //        new ObjectParameter("Email", typeof(string));
    
        //    var productParameter = product != null ?
        //        new ObjectParameter("Product", product) :
        //        new ObjectParameter("Product", typeof(string));
    
        //    var referenceParameter = reference != null ?
        //        new ObjectParameter("Reference", reference) :
        //        new ObjectParameter("Reference", typeof(string));
    
        //    var wantSMSAlertsParameter = wantSMSAlerts != null ?
        //        new ObjectParameter("WantSMSAlerts", wantSMSAlerts) :
        //        new ObjectParameter("WantSMSAlerts", typeof(string));
    
        //    var leadAssignedbyParameter = leadAssignedby != null ?
        //        new ObjectParameter("LeadAssignedby", leadAssignedby) :
        //        new ObjectParameter("LeadAssignedby", typeof(string));
    
        //    var statusParameter = status != null ?
        //        new ObjectParameter("Status", status) :
        //        new ObjectParameter("Status", typeof(string));
    
        //    var websiteParameter = website != null ?
        //        new ObjectParameter("Website", website) :
        //        new ObjectParameter("Website", typeof(string));
    
        //    var industryParameter = industry != null ?
        //        new ObjectParameter("Industry", industry) :
        //        new ObjectParameter("Industry", typeof(string));
    
        //    var ratingParameter = rating != null ?
        //        new ObjectParameter("Rating", rating) :
        //        new ObjectParameter("Rating", typeof(string));
    
        //    var comment1Parameter = comment1 != null ?
        //        new ObjectParameter("Comment1", comment1) :
        //        new ObjectParameter("Comment1", typeof(string));
    
        //    var comment2Parameter = comment2 != null ?
        //        new ObjectParameter("Comment2", comment2) :
        //        new ObjectParameter("Comment2", typeof(string));
    
        //    var comment3Parameter = comment3 != null ?
        //        new ObjectParameter("Comment3", comment3) :
        //        new ObjectParameter("Comment3", typeof(string));
    
        //    var leadOwnerParameter = leadOwner != null ?
        //        new ObjectParameter("LeadOwner", leadOwner) :
        //        new ObjectParameter("LeadOwner", typeof(string));
    
        //    var leadDateParameter = leadDate.HasValue ?
        //        new ObjectParameter("LeadDate", leadDate) :
        //        new ObjectParameter("LeadDate", typeof(System.DateTime));
    
        //    var followUpdateParameter = followUpdate.HasValue ?
        //        new ObjectParameter("FollowUpdate", followUpdate) :
        //        new ObjectParameter("FollowUpdate", typeof(System.DateTime));
    
        //    var selectedProductIdParameter = selectedProductId.HasValue ?
        //        new ObjectParameter("SelectedProductId", selectedProductId) :
        //        new ObjectParameter("SelectedProductId", typeof(int));
    
        //    var selectedStatusIdParameter = selectedStatusId.HasValue ?
        //        new ObjectParameter("SelectedStatusId", selectedStatusId) :
        //        new ObjectParameter("SelectedStatusId", typeof(int));
    
        //    var selectedReferenceParameter = selectedReference.HasValue ?
        //        new ObjectParameter("SelectedReference", selectedReference) :
        //        new ObjectParameter("SelectedReference", typeof(int));
    
        //    var wantMailAlertsParameter = wantMailAlerts != null ?
        //        new ObjectParameter("WantMailAlerts", wantMailAlerts) :
        //        new ObjectParameter("WantMailAlerts", typeof(string));
    
        //    var record_CreatedByParameter = record_CreatedBy != null ?
        //        new ObjectParameter("Record_CreatedBy", record_CreatedBy) :
        //        new ObjectParameter("Record_CreatedBy", typeof(string));
    
        //    var created_DateParameter = created_Date.HasValue ?
        //        new ObjectParameter("Created_Date", created_Date) :
        //        new ObjectParameter("Created_Date", typeof(System.DateTime));
    
        //    var record_ModifiedByParameter = record_ModifiedBy != null ?
        //        new ObjectParameter("Record_ModifiedBy", record_ModifiedBy) :
        //        new ObjectParameter("Record_ModifiedBy", typeof(string));
    
        //    var modified_DateParameter = modified_Date.HasValue ?
        //        new ObjectParameter("Modified_Date", modified_Date) :
        //        new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
        //    return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_AddLead", compIdParameter, brIdParameter, leadNameParameter, addressParameter, mobileParameter, emailParameter, productParameter, referenceParameter, wantSMSAlertsParameter, leadAssignedbyParameter, statusParameter, websiteParameter, industryParameter, ratingParameter, comment1Parameter, comment2Parameter, comment3Parameter, leadOwnerParameter, leadDateParameter, followUpdateParameter, selectedProductIdParameter, selectedStatusIdParameter, selectedReferenceParameter, wantMailAlertsParameter, record_CreatedByParameter, created_DateParameter, record_ModifiedByParameter, modified_DateParameter);
        //}
    
        //public virtual int Proc_AddUser(Nullable<int> compId, Nullable<int> brId, Nullable<int> isActiveId, string userName, Nullable<int> roleId, string isActiveName, string password, string roleName, string emailId, string record_CreatedBy, Nullable<System.DateTime> created_Date)
        //{
        //    var compIdParameter = compId.HasValue ?
        //        new ObjectParameter("CompId", compId) :
        //        new ObjectParameter("CompId", typeof(int));
    
        //    var brIdParameter = brId.HasValue ?
        //        new ObjectParameter("BrId", brId) :
        //        new ObjectParameter("BrId", typeof(int));
    
        //    var isActiveIdParameter = isActiveId.HasValue ?
        //        new ObjectParameter("IsActiveId", isActiveId) :
        //        new ObjectParameter("IsActiveId", typeof(int));
    
        //    var userNameParameter = userName != null ?
        //        new ObjectParameter("UserName", userName) :
        //        new ObjectParameter("UserName", typeof(string));
    
        //    var roleIdParameter = roleId.HasValue ?
        //        new ObjectParameter("RoleId", roleId) :
        //        new ObjectParameter("RoleId", typeof(int));
    
        //    var isActiveNameParameter = isActiveName != null ?
        //        new ObjectParameter("IsActiveName", isActiveName) :
        //        new ObjectParameter("IsActiveName", typeof(string));
    
        //    var passwordParameter = password != null ?
        //        new ObjectParameter("Password", password) :
        //        new ObjectParameter("Password", typeof(string));
    
        //    var roleNameParameter = roleName != null ?
        //        new ObjectParameter("RoleName", roleName) :
        //        new ObjectParameter("RoleName", typeof(string));
    
        //    var emailIdParameter = emailId != null ?
        //        new ObjectParameter("EmailId", emailId) :
        //        new ObjectParameter("EmailId", typeof(string));
    
        //    var record_CreatedByParameter = record_CreatedBy != null ?
        //        new ObjectParameter("Record_CreatedBy", record_CreatedBy) :
        //        new ObjectParameter("Record_CreatedBy", typeof(string));
    
        //    var created_DateParameter = created_Date.HasValue ?
        //        new ObjectParameter("Created_Date", created_Date) :
        //        new ObjectParameter("Created_Date", typeof(System.DateTime));
    
        //    return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_AddUser", compIdParameter, brIdParameter, isActiveIdParameter, userNameParameter, roleIdParameter, isActiveNameParameter, passwordParameter, roleNameParameter, emailIdParameter, record_CreatedByParameter, created_DateParameter);
        //}
    
        //public virtual int Proc_getleadsbyuseridentity(string stu_LeadAssignedTo, string stu_LeadAssignedby)
        //{
        //    var stu_LeadAssignedToParameter = stu_LeadAssignedTo != null ?
        //        new ObjectParameter("stu_LeadAssignedTo", stu_LeadAssignedTo) :
        //        new ObjectParameter("stu_LeadAssignedTo", typeof(string));
    
        //    var stu_LeadAssignedbyParameter = stu_LeadAssignedby != null ?
        //        new ObjectParameter("stu_LeadAssignedby", stu_LeadAssignedby) :
        //        new ObjectParameter("stu_LeadAssignedby", typeof(string));
    
        //    return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_getleadsbyuseridentity", stu_LeadAssignedToParameter, stu_LeadAssignedbyParameter);
        //}
    
        //public virtual int Proc_InserLogs(string machineName, string userName, string userRole, string controllerName, string actionName, string exceptionMessage, string stackTrace, Nullable<System.DateTime> dateTime)
        //{
        //    var machineNameParameter = machineName != null ?
        //        new ObjectParameter("MachineName", machineName) :
        //        new ObjectParameter("MachineName", typeof(string));
    
        //    var userNameParameter = userName != null ?
        //        new ObjectParameter("UserName", userName) :
        //        new ObjectParameter("UserName", typeof(string));
    
        //    var userRoleParameter = userRole != null ?
        //        new ObjectParameter("UserRole", userRole) :
        //        new ObjectParameter("UserRole", typeof(string));
    
        //    var controllerNameParameter = controllerName != null ?
        //        new ObjectParameter("ControllerName", controllerName) :
        //        new ObjectParameter("ControllerName", typeof(string));
    
        //    var actionNameParameter = actionName != null ?
        //        new ObjectParameter("ActionName", actionName) :
        //        new ObjectParameter("ActionName", typeof(string));
    
        //    var exceptionMessageParameter = exceptionMessage != null ?
        //        new ObjectParameter("ExceptionMessage", exceptionMessage) :
        //        new ObjectParameter("ExceptionMessage", typeof(string));
    
        //    var stackTraceParameter = stackTrace != null ?
        //        new ObjectParameter("StackTrace", stackTrace) :
        //        new ObjectParameter("StackTrace", typeof(string));
    
        //    var dateTimeParameter = dateTime.HasValue ?
        //        new ObjectParameter("DateTime", dateTime) :
        //        new ObjectParameter("DateTime", typeof(System.DateTime));
    
        //    return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_InserLogs", machineNameParameter, userNameParameter, userRoleParameter, controllerNameParameter, actionNameParameter, exceptionMessageParameter, stackTraceParameter, dateTimeParameter);
        //}
    
        //public virtual int Proc_UpdateLead(Nullable<int> id, Nullable<int> compId, Nullable<int> brId, string leadName, string address, string mobile, string email, string product, string reference, string wantSMSAlerts, string leadAssignedby, string status, string website, string industry, string rating, string comment1, string comment2, string comment3, string leadOwner, Nullable<System.DateTime> leadDate, Nullable<System.DateTime> followUpdate, Nullable<int> selectedProductId, Nullable<int> selectedStatusId, Nullable<int> selectedReference, string wantMailAlerts, string record_ModifiedBy, Nullable<System.DateTime> modified_Date)
        //{
        //    var idParameter = id.HasValue ?
        //        new ObjectParameter("Id", id) :
        //        new ObjectParameter("Id", typeof(int));
    
        //    var compIdParameter = compId.HasValue ?
        //        new ObjectParameter("CompId", compId) :
        //        new ObjectParameter("CompId", typeof(int));
    
        //    var brIdParameter = brId.HasValue ?
        //        new ObjectParameter("BrId", brId) :
        //        new ObjectParameter("BrId", typeof(int));
    
        //    var leadNameParameter = leadName != null ?
        //        new ObjectParameter("LeadName", leadName) :
        //        new ObjectParameter("LeadName", typeof(string));
    
        //    var addressParameter = address != null ?
        //        new ObjectParameter("Address", address) :
        //        new ObjectParameter("Address", typeof(string));
    
        //    var mobileParameter = mobile != null ?
        //        new ObjectParameter("Mobile", mobile) :
        //        new ObjectParameter("Mobile", typeof(string));
    
        //    var emailParameter = email != null ?
        //        new ObjectParameter("Email", email) :
        //        new ObjectParameter("Email", typeof(string));
    
        //    var productParameter = product != null ?
        //        new ObjectParameter("Product", product) :
        //        new ObjectParameter("Product", typeof(string));
    
        //    var referenceParameter = reference != null ?
        //        new ObjectParameter("Reference", reference) :
        //        new ObjectParameter("Reference", typeof(string));
    
        //    var wantSMSAlertsParameter = wantSMSAlerts != null ?
        //        new ObjectParameter("WantSMSAlerts", wantSMSAlerts) :
        //        new ObjectParameter("WantSMSAlerts", typeof(string));
    
        //    var leadAssignedbyParameter = leadAssignedby != null ?
        //        new ObjectParameter("LeadAssignedby", leadAssignedby) :
        //        new ObjectParameter("LeadAssignedby", typeof(string));
    
        //    var statusParameter = status != null ?
        //        new ObjectParameter("Status", status) :
        //        new ObjectParameter("Status", typeof(string));
    
        //    var websiteParameter = website != null ?
        //        new ObjectParameter("Website", website) :
        //        new ObjectParameter("Website", typeof(string));
    
        //    var industryParameter = industry != null ?
        //        new ObjectParameter("Industry", industry) :
        //        new ObjectParameter("Industry", typeof(string));
    
        //    var ratingParameter = rating != null ?
        //        new ObjectParameter("Rating", rating) :
        //        new ObjectParameter("Rating", typeof(string));
    
        //    var comment1Parameter = comment1 != null ?
        //        new ObjectParameter("Comment1", comment1) :
        //        new ObjectParameter("Comment1", typeof(string));
    
        //    var comment2Parameter = comment2 != null ?
        //        new ObjectParameter("Comment2", comment2) :
        //        new ObjectParameter("Comment2", typeof(string));
    
        //    var comment3Parameter = comment3 != null ?
        //        new ObjectParameter("Comment3", comment3) :
        //        new ObjectParameter("Comment3", typeof(string));
    
        //    var leadOwnerParameter = leadOwner != null ?
        //        new ObjectParameter("LeadOwner", leadOwner) :
        //        new ObjectParameter("LeadOwner", typeof(string));
    
        //    var leadDateParameter = leadDate.HasValue ?
        //        new ObjectParameter("LeadDate", leadDate) :
        //        new ObjectParameter("LeadDate", typeof(System.DateTime));
    
        //    var followUpdateParameter = followUpdate.HasValue ?
        //        new ObjectParameter("FollowUpdate", followUpdate) :
        //        new ObjectParameter("FollowUpdate", typeof(System.DateTime));
    
        //    var selectedProductIdParameter = selectedProductId.HasValue ?
        //        new ObjectParameter("SelectedProductId", selectedProductId) :
        //        new ObjectParameter("SelectedProductId", typeof(int));
    
        //    var selectedStatusIdParameter = selectedStatusId.HasValue ?
        //        new ObjectParameter("SelectedStatusId", selectedStatusId) :
        //        new ObjectParameter("SelectedStatusId", typeof(int));
    
        //    var selectedReferenceParameter = selectedReference.HasValue ?
        //        new ObjectParameter("SelectedReference", selectedReference) :
        //        new ObjectParameter("SelectedReference", typeof(int));
    
        //    var wantMailAlertsParameter = wantMailAlerts != null ?
        //        new ObjectParameter("WantMailAlerts", wantMailAlerts) :
        //        new ObjectParameter("WantMailAlerts", typeof(string));
    
        //    var record_ModifiedByParameter = record_ModifiedBy != null ?
        //        new ObjectParameter("Record_ModifiedBy", record_ModifiedBy) :
        //        new ObjectParameter("Record_ModifiedBy", typeof(string));
    
        //    var modified_DateParameter = modified_Date.HasValue ?
        //        new ObjectParameter("Modified_Date", modified_Date) :
        //        new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
        //    return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_UpdateLead", idParameter, compIdParameter, brIdParameter, leadNameParameter, addressParameter, mobileParameter, emailParameter, productParameter, referenceParameter, wantSMSAlertsParameter, leadAssignedbyParameter, statusParameter, websiteParameter, industryParameter, ratingParameter, comment1Parameter, comment2Parameter, comment3Parameter, leadOwnerParameter, leadDateParameter, followUpdateParameter, selectedProductIdParameter, selectedStatusIdParameter, selectedReferenceParameter, wantMailAlertsParameter, record_ModifiedByParameter, modified_DateParameter);
        //}
    
        //public virtual int Proc_UpdateUser(Nullable<int> compId, Nullable<int> brId, Nullable<int> userId, string userName, Nullable<int> roleId, string password, string roleName, string emailId, string record_ModifiedBy, Nullable<int> isActiveId, string isActiveName, Nullable<System.DateTime> modified_Date)
        //{
        //    var compIdParameter = compId.HasValue ?
        //        new ObjectParameter("CompId", compId) :
        //        new ObjectParameter("CompId", typeof(int));
    
        //    var brIdParameter = brId.HasValue ?
        //        new ObjectParameter("BrId", brId) :
        //        new ObjectParameter("BrId", typeof(int));
    
        //    var userIdParameter = userId.HasValue ?
        //        new ObjectParameter("UserId", userId) :
        //        new ObjectParameter("UserId", typeof(int));
    
        //    var userNameParameter = userName != null ?
        //        new ObjectParameter("UserName", userName) :
        //        new ObjectParameter("UserName", typeof(string));
    
        //    var roleIdParameter = roleId.HasValue ?
        //        new ObjectParameter("RoleId", roleId) :
        //        new ObjectParameter("RoleId", typeof(int));
    
        //    var passwordParameter = password != null ?
        //        new ObjectParameter("Password", password) :
        //        new ObjectParameter("Password", typeof(string));
    
        //    var roleNameParameter = roleName != null ?
        //        new ObjectParameter("RoleName", roleName) :
        //        new ObjectParameter("RoleName", typeof(string));
    
        //    var emailIdParameter = emailId != null ?
        //        new ObjectParameter("EmailId", emailId) :
        //        new ObjectParameter("EmailId", typeof(string));
    
        //    var record_ModifiedByParameter = record_ModifiedBy != null ?
        //        new ObjectParameter("Record_ModifiedBy", record_ModifiedBy) :
        //        new ObjectParameter("Record_ModifiedBy", typeof(string));
    
        //    var isActiveIdParameter = isActiveId.HasValue ?
        //        new ObjectParameter("IsActiveId", isActiveId) :
        //        new ObjectParameter("IsActiveId", typeof(int));
    
        //    var isActiveNameParameter = isActiveName != null ?
        //        new ObjectParameter("IsActiveName", isActiveName) :
        //        new ObjectParameter("IsActiveName", typeof(string));
    
        //    var modified_DateParameter = modified_Date.HasValue ?
        //        new ObjectParameter("Modified_Date", modified_Date) :
        //        new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
        //    return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_UpdateUser", compIdParameter, brIdParameter, userIdParameter, userNameParameter, roleIdParameter, passwordParameter, roleNameParameter, emailIdParameter, record_ModifiedByParameter, isActiveIdParameter, isActiveNameParameter, modified_DateParameter);
        //}
    }
}
